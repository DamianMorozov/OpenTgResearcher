name: Build Windows application

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
      - name: Get latest version from CHANGELOG
        id: get_version
        run: echo "version=$(grep '^## \[' Docs/CHANGELOG.md | head -n1 | sed 's/^## \[\(.*\)\].*/\1/')" >> $GITHUB_OUTPUT
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Setup Nuget Cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install dependencies
        run: nuget restore OpenTgResearcher.sln
      - name: Restore OpenTgResearcherConsole
        run: dotnet restore Presentation/OpenTgResearcherConsole/OpenTgResearcherConsole.csproj
      - name: Build OpenTgResearcherConsole AnyCPU
        run: dotnet publish Presentation/OpenTgResearcherConsole/OpenTgResearcherConsole.csproj `
              -c Release `
              -o output/Console-AnyCPU `
              --use-current-runtime `
              --self-contained
      - name: Delete session file if exists
        shell: pwsh
        run: |
            $path = "output\Console-AnyCPU\OpenTgResearcher.session"
            if (Test-Path $path) {
                Remove-Item $path
            }
      - name: Delete xml file if exists
        shell: pwsh
        run: |
            $path = "output\Console-AnyCPU\OpenTgResearcher.xml"
            if (Test-Path $path) {
                Remove-Item $path
            }
      - name: Install latest Velopack CLI
        run: dotnet tool update -g vpk
      - name: Package with Velopack
        run: |
          vpk pack \
            -p "output/Console-AnyCPU" \
            -v "${{ steps.get_version.outputs.version }}" \
            -u "OpenTgResearcherConsole" \
            -o "output/Installer" \
            -c "win-Portable" \
            -i "Docs/Assets/Icon.ico" \
            -e "OpenTgResearcherConsole.exe"
      - name: Create portable zip
        run: Compress-Archive -Path output/Console-AnyCPU/* -DestinationPath OpenTgResearcherConsole-win-Portable.zip
      - name: Upload portable archive
        uses: actions/upload-artifact@v4
        with:
          name: OpenTgResearcherConsole-win-Portable
          path: OpenTgResearcherConsole-win-Portable.zip
