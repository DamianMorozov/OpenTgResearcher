<common:TgPageBase
    x:Class="OpenTgResearcherDesktop.Views.TgChatDetailsContentPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:OpenTgResearcherDesktop.Common"
    xmlns:converters="using:OpenTgResearcherDesktop.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:OpenTgResearcherDesktop.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:messages="using:TgStorage.Domain.Messages"
    xmlns:users="using:TgStorage.Domain.Users"
    xmlns:viewmodels="using:OpenTgResearcherDesktop.ViewModels"
    xmlns:views="using:OpenTgResearcherDesktop.Views"
    d:DataContext="{d:DesignInstance Type=viewmodels:TgChatDetailsContentViewModel}"
    mc:Ignorable="d">

    <common:TgPageBase.Resources>
        <!--  Messages data template  -->
        <DataTemplate x:Key="MessagesViewTemplate" x:DataType="messages:TgEfMessageDto">
            <StackPanel
                Grid.Column="{x:Bind Direction, Converter={StaticResource EnumToColumnConverter}}"
                Grid.ColumnSpan="{x:Bind Direction, Converter={StaticResource EnumToColumnSpanConverter}}"
                Height="Auto"
                Margin="5"
                Padding="10,0,0,10"
                HorizontalAlignment="Stretch"
                Background="{ThemeResource SystemColorBackgroundBrush}"
                CornerRadius="10"
                Opacity="1">
                <!--  Created | Id | Link  -->
                <StackPanel Orientation="Horizontal">
                    <!--  ID  -->
                    <TextBlock
                        x:Uid="TextBlockCreated"
                        Margin="5,5,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Margin="15,5,5,0"
                        Text="{x:Bind SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                    <!--  DateTime changed  -->
                    <TextBlock
                        Margin="15,5,5,0"
                        HorizontalAlignment="Left"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{x:Bind DtChangedString, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <!--  ID  -->
                    <TextBlock
                        x:Uid="TextBlockId"
                        Margin="15,5,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Margin="10,0,5,0"
                        Text="{x:Bind SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                    <TextBlock
                        Margin="10,5,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{x:Bind Id, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <!--  Copy button  -->
                    <Button
                        Margin="5,0,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding ViewModel.OnClipboardSilentWriteCommand}"
                        CommandParameter="{x:Bind Id, Mode=OneWay}"
                        CornerRadius="10">
                        <SymbolIcon Symbol="Copy" />
                    </Button>
                    <!--  Link  -->
                    <TextBlock
                        x:Uid="TextBlockLink"
                        Margin="15,5,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Margin="10,0,5,0"
                        Text="{x:Bind SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                    <TextBlock
                        Margin="10,5,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{x:Bind Link, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <!--  Copy button  -->
                    <Button
                        Margin="5,0,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding ViewModel.OnClipboardSilentWriteCommand}"
                        CommandParameter="{x:Bind Link, Mode=OneWay}"
                        CornerRadius="10">
                        <SymbolIcon Symbol="Copy" />
                    </Button>
                </StackPanel>
                <!--  Message  -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        x:Uid="TextBlockMessage"
                        Margin="5,0,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Margin="10,0,5,0"
                        Text="{x:Bind SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                    <TextBlock
                        Margin="10,0,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{x:Bind MessageText, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <!--  Copy button  -->
                    <Button
                        Margin="5,-5,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding ViewModel.OnClipboardSilentWriteCommand}"
                        CommandParameter="{x:Bind MessageText, Mode=OneWay}"
                        CornerRadius="10">
                        <SymbolIcon Symbol="Copy" />
                    </Button>
                </StackPanel>
                <!--  Sender  -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        x:Uid="TextBlockSender"
                        Margin="5,0,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Margin="10,0,5,0"
                        Text="{x:Bind SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                    <TextBlock
                        Margin="10,0,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{x:Bind UserId, Mode=OneWay}"
                        Visibility="{x:Bind IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <!--  Copy button  -->
                    <Button
                        Margin="5,-5,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding ViewModel.OnClipboardSilentWriteCommand}"
                        CommandParameter="{x:Bind UserId, Mode=OneWay}"
                        CornerRadius="10">
                        <SymbolIcon Symbol="Copy" />
                    </Button>
                </StackPanel>
                <!--  Image preview  -->
                <Image
                    MaxHeight="1000"
                    Margin="0,10,0,10"
                    Source="{x:Bind ImageFullPath, Mode=OneWay, Converter={StaticResource SafeImagePathConverter}}"
                    Stretch="Uniform"
                    Tapped="OnImagePreviewClick"
                    Visibility="{x:Bind IsImageExists, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <!--  Message deleted  -->
                <TextBlock
                    x:Uid="TextBlockMessageDeleted"
                    Margin="5,0,5,0"
                    Style="{ThemeResource BodyTextBlockStyle}"
                    Visibility="{x:Bind IsDeleted, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
        </DataTemplate>
    </common:TgPageBase.Resources>

    <!--  Messages and media  -->
    <ScrollView VerticalScrollMode="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <!--  Load data  -->
            <views:TgLoadDataPage Visibility="{x:Bind ViewModel.IsPageLoad, Mode=OneWay}" />
            <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.IsPageLoad, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <!--  Empty data  -->
                <TextBlock
                    x:Uid="FieldEmptyData"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{x:Bind ViewModel.IsEmptyData, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <!--  Data  -->
                <Grid Visibility="{x:Bind ViewModel.IsEmptyData, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <!--  List view with messages  -->
                    <ListView
                        x:Name="ListViewMessages"
                        MaxHeight="1000"
                        ItemTemplate="{StaticResource MessagesViewTemplate}"
                        ItemsSource="{x:Bind ViewModel.MessageDtos, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsImageViewerVisible, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <!--  The ItemsStackPanel must be edited to update the following two properties  -->
                        <!--  These properties allow the list to grow from the bottom  -->
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel VerticalAlignment="Top" ItemsUpdatingScrollMode="KeepLastItemInView" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <!--  This setter property is created so ListViewItems correctly align to the left or right.  -->
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <!--  Full-size image on top of ListView  -->
                    <Border
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="#CC000000"
                        IsHitTestVisible="{x:Bind ViewModel.IsImageViewerVisible, Mode=OneWay}">
                        <Image
                            x:Name="FullScreenImage"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stretch="Uniform"
                            Tapped="OnFullScreenImageTapped"
                            Visibility="{x:Bind ViewModel.IsImageViewerVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Border>
                </Grid>
            </Grid>
        </Grid>
    </ScrollView>
</common:TgPageBase>