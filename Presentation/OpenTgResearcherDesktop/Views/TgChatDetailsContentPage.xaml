<common:TgPageBase
    x:Class="OpenTgResearcherDesktop.Views.TgChatDetailsContentPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:OpenTgResearcherDesktop.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:OpenTgResearcherDesktop.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:messages="using:TgStorage.Domain.Messages"
    xmlns:styles="using:OpenTgResearcherDesktop.Styles"
    xmlns:users="using:TgStorage.Domain.Users"
    xmlns:viewmodels="using:OpenTgResearcherDesktop.ViewModels"
    xmlns:views="using:OpenTgResearcherDesktop.Views"
    d:DataContext="{d:DesignInstance Type=viewmodels:TgChatDetailsContentViewModel}"
    mc:Ignorable="d">

    <common:TgPageBase.Resources>
        <!--  Messages data template  -->
        <DataTemplate x:Key="MessagesViewTemplate" x:DataType="messages:TgEfMessageDto">
            <!--  General background and rounding  -->
            <Border
                Grid.Column="{x:Bind Direction, Converter={StaticResource EnumToColumnConverter}}"
                Grid.ColumnSpan="{x:Bind Direction, Converter={StaticResource EnumToColumnSpanConverter}}"
                Margin="0,0,0,5"
                Padding="5"
                Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                CornerRadius="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!--  Title and meta  -->
                        <RowDefinition Height="Auto" />
                        <!--  Message text  -->
                        <RowDefinition Height="Auto" />
                        <!--  Image  -->
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Grid.Resources>
                    <!--  Header: Changed, Id, Link, Sender  -->
                    <StackPanel
                        Grid.Row="0"
                        Orientation="Horizontal"
                        Spacing="5">
                        <!--  DtChangedString  -->
                        <TextBlock
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{x:Bind DtChangedString, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <TextBlock
                            Margin="5,5,5,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="·" />
                        <!--  Id  -->
                        <TextBlock
                            x:Uid="TextBlockId"
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{x:Bind Id, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <styles:TgAnimatedClipboardButton
                            Click="OnClipboardSilentWriteClick"
                            Style="{StaticResource ClipboardAnimatedButtonStyle}"
                            Tag="{x:Bind Id, Mode=OneWay}" />
                        <TextBlock
                            Margin="5,5,5,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="·" />
                        <!--  Link  -->
                        <TextBlock
                            x:Uid="TextBlockLink"
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <HyperlinkButton
                            Margin="0,-1,0,0"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            Click="OnOpenHyperlink"
                            Content="{x:Bind Link, Mode=OneWay}"
                            Tag="{x:Bind Link, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <styles:TgAnimatedClipboardButton
                            Click="OnClipboardSilentWriteClick"
                            Style="{StaticResource ClipboardAnimatedButtonStyle}"
                            Tag="{x:Bind Link, Mode=OneWay}" />
                        <TextBlock
                            Margin="5,5,5,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="·" />
                        <!--  Sender  -->
                        <TextBlock
                            x:Uid="TextBlockSender"
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{x:Bind UserId, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <styles:TgAnimatedClipboardButton
                            Click="OnClipboardSilentWriteClick"
                            Style="{StaticResource ClipboardAnimatedButtonStyle}"
                            Tag="{x:Bind UserId, Mode=OneWay}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{x:Bind UserContact, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <!--  Message deleted  -->
                        <TextBlock
                            x:Uid="TextBlockMessageDeleted"
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Visibility="{x:Bind IsDeleted, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </StackPanel>
                    <!--  Message content: image, text message  -->
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                            <TextBlock
                                x:Uid="TextBlockMessage"
                                Margin="0,5,0,0"
                                Style="{ThemeResource BodyTextBlockStyle}" />
                            <styles:TgAnimatedClipboardButton
                                Click="OnClipboardSilentWriteClick"
                                Style="{StaticResource ClipboardAnimatedButtonStyle}"
                                Tag="{x:Bind MessageText, Mode=OneWay}" />
                        </StackPanel>
                        <!--  Image preview  -->
                        <Border
                            Grid.Column="1"
                            MaxWidth="400"
                            MaxHeight="300"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            BorderBrush="{ThemeResource SystemAccentColor}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Image
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="{x:Bind ImageFullPath, Mode=OneWay, Converter={StaticResource SafeImagePathConverter}}"
                                Stretch="Uniform"
                                Tapped="OnImagePreviewClick"
                                Visibility="{x:Bind IsImageExists, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Border>
                        <!--  Thumb preview  -->
                        <Border
                            Grid.Column="1"
                            MaxWidth="400"
                            MaxHeight="300"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            BorderBrush="{ThemeResource SystemAccentColor}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Image
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="{x:Bind ThumbFullPath, Mode=OneWay, Converter={StaticResource SafeImagePathConverter}}"
                                Stretch="Uniform"
                                Tapped="OnImagePreviewClick"
                                Visibility="{x:Bind IsThumbExists, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Border>
                        <!--  Message  -->
                        <TextBlock
                            Grid.Column="2"
                            Margin="5,5,0,0"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBlock
                            Grid.Column="2"
                            Margin="5,5,0,0"
                            VerticalAlignment="Center"
                            OpticalMarginAlignment="TrimSideBearings"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{x:Bind MessageText, Mode=OneWay}"
                            TextAlignment="Left"
                            TextWrapping="WrapWholeWords"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>
    </common:TgPageBase.Resources>

    <!--  Messages and media  -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <!--  Load data  -->
        <views:TgLoadDataPage />
        <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.IsStorageProcessing, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
        <!--  Data  -->
        <Grid
            Grid.Row="1"
            Margin="-10,5,0,0"
            Visibility="{x:Bind ViewModel.IsEmptyData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <!--  Empty data  -->
            <TextBlock
                x:Uid="FieldEmptyData"
                Grid.ColumnSpan="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="{x:Bind ViewModel.IsEmptyData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
            <!--  Lazy load  -->
            <Button
                Grid.Row="0"
                Margin="10,0,5,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Command="{x:Bind ViewModel.LazyLoadMessagesCommand}"
                IsEnabled="{x:Bind ViewModel.HasMoreMessages, Mode=OneWay}"
                Visibility="{x:Bind ViewModel.IsEmptyData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <FontIcon Margin="0,0,10,0" Glyph="&#xE712;" />
                    <TextBlock
                        x:Uid="TextBlockLoadMore"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                </StackPanel>
            </Button>
            <!--  Clear viewing  -->
            <Button
                Grid.Row="0"
                Grid.Column="1"
                Margin="0,0,5,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Command="{x:Bind ViewModel.ClearViewCommand}">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <FontIcon Margin="0,0,10,0" Glyph="&#xe894;" />
                    <TextBlock
                        x:Uid="ActionClearView"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                </StackPanel>
            </Button>
            <!--  Loaded data statistics  -->
            <TextBlock
                Grid.Row="0"
                Grid.Column="2"
                Margin="5,0,10,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Text="{x:Bind ViewModel.LoadedDataStatistics, Mode=OneWay}"
                TextAlignment="Center" />
            <!--  List view with messages  -->
            <ListView
                x:Name="ListViewMessages"
                Grid.Row="1"
                Grid.ColumnSpan="3"
                Margin="0,5,0,0"
                ItemTemplate="{StaticResource MessagesViewTemplate}"
                ItemsSource="{x:Bind ViewModel.MessageDtos, Mode=OneWay}"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollMode="Auto"
                Visibility="{x:Bind ViewModel.IsEmptyData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <!--  The ItemsStackPanel must be edited to update the following two properties  -->
                <!--  These properties allow the list to grow from the bottom  -->
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel VerticalAlignment="Top" ItemsUpdatingScrollMode="KeepLastItemInView" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <!--  This setter property is created so ListViewItems correctly align to the left or right.  -->
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <!--  Full-size image on top of ListView  -->
            <Border
                Grid.Row="1"
                Grid.ColumnSpan="3"
                Margin="0,5,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="#CC000000"
                Visibility="{x:Bind ViewModel.IsImageViewerVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                <Image
                    x:Name="FullScreenImage"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Stretch="Uniform"
                    Tapped="OnFullScreenImageTapped" />
            </Border>
        </Grid>
    </Grid>
</common:TgPageBase>