<common:TgPageBase
    x:Class="OpenTgResearcherDesktop.Views.TgChatDetailsStatisticsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:OpenTgResearcherDesktop.Common"
    xmlns:converters="using:OpenTgResearcherDesktop.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:OpenTgResearcherDesktop.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:messages="using:TgStorage.Domain.Messages"
    xmlns:users="using:TgStorage.Domain.Users"
    xmlns:viewmodels="using:OpenTgResearcherDesktop.ViewModels"
    xmlns:views="using:OpenTgResearcherDesktop.Views"
    d:DataContext="{d:DesignInstance Type=viewmodels:TgChatDetailsStatisticsViewModel}"
    mc:Ignorable="d">

    <common:TgPageBase.Resources>
        <!--  Participants data template  -->
        <DataTemplate x:Key="ParticipantsStatisticsViewTemplate" x:DataType="users:TgEfUserWithCountDto">
            <Button
                Margin="-5,10,5,-5"
                Click="OnUserClick"
                CornerRadius="10"
                Tag="{x:Bind UserDto.Id, Mode=OneWay}">
                <StackPanel Orientation="Horizontal" Spacing="10">
                    <!--  Id  -->
                    <TextBlock x:Uid="FieldId" Margin="0,5,0,0" />
                    <TextBlock
                        Margin="0,5,0,0"
                        Text="{x:Bind UserDto.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind UserDto.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBlock
                        Width="Auto"
                        Margin="0,5,0,0"
                        Text="{x:Bind UserDto.Id}"
                        Visibility="{x:Bind UserDto.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <converters:TgAnimatedClipboardButton
                        Click="OnClipboardSilentWriteClick"
                        Style="{StaticResource ClipboardAnimatedButtonStyle}"
                        Tag="{x:Bind UserDto.Id, Mode=OneWay}" />
                    <TextBlock
                        Margin="5,0,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="·" />
                    <!--  DisplayName  -->
                    <TextBlock
                        Margin="0,5,0,0"
                        Text="{x:Bind UserDto.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind UserDto.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBlock
                        Margin="0,5,0,0"
                        Text="{x:Bind UserDto.DisplayName}"
                        Visibility="{x:Bind UserDto.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <converters:TgAnimatedClipboardButton
                        Click="OnClipboardSilentWriteClick"
                        Style="{StaticResource ClipboardAnimatedButtonStyle}"
                        Tag="{x:Bind UserDto.DisplayName, Mode=OneWay}" />
                    <TextBlock
                        Margin="5,0,5,0"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="·" />
                    <!--  Messages count  -->
                    <TextBlock x:Uid="FieldMessagesCount" Margin="0,5,0,0" />
                    <TextBlock
                        Margin="0,5,5,0"
                        Text="{x:Bind UserDto.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind UserDto.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBlock
                        Margin="0,5,0,0"
                        FontWeight="SemiBold"
                        Text="{x:Bind Count}"
                        Visibility="{x:Bind UserDto.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                </StackPanel>
            </Button>
        </DataTemplate>
    </common:TgPageBase.Resources>

    <!--  Chat statistics  -->
    <ScrollView VerticalScrollMode="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <!--  Load data  -->
            <views:TgLoadDataPage Visibility="{x:Bind ViewModel.IsPageLoad, Mode=OneWay}" />
            <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.IsPageLoad, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <!--  Statistics calculation button  -->
                <Button
                    Margin="0,0,5,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Command="{x:Bind ViewModel.CalcChatStatisticsCommand}"
                    IsEnabled="{x:Bind ViewModel.IsOnlineReady, Mode=OneWay}">
                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                        <FontIcon Margin="0,0,10,0" Glyph="&#xe777;" />
                        <TextBlock
                            x:Uid="TextBlockCalcChatStatistics"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <!--  ChatStatisticsDto  -->
                <Grid Grid.Row="1" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <!--  DtStart  -->
                    <TextBlock x:Uid="TextBlockDtStart" VerticalAlignment="Center" />
                    <DatePicker
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        SelectedDate="{x:Bind ViewModel.ChatStatisticsDto.DtStart, Mode=TwoWay}" />
                    <!--  DtEnd  -->
                    <TextBlock
                        x:Uid="TextBlockDtEnd"
                        Grid.Column="2"
                        Margin="50,0,0,0"
                        VerticalAlignment="Center" />
                    <DatePicker
                        Grid.Column="3"
                        Margin="10,0,0,0"
                        SelectedDate="{x:Bind ViewModel.ChatStatisticsDto.DtEnd, Mode=TwoWay}" />
                    <!--  User and bot statistics  -->
                    <TextBlock
                        x:Uid="TextBlockUsers"
                        Grid.Column="4"
                        Margin="50,0,0,0"
                        VerticalAlignment="Center"
                        Text="" />
                    <TextBlock
                        Grid.Column="5"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{x:Bind ViewModel.ChatStatisticsDto.UsersCount, Mode=OneWay}" />
                    <TextBlock
                        x:Uid="TextBlockBots"
                        Grid.Column="6"
                        Margin="20,0,0,0"
                        VerticalAlignment="Center" />
                    <TextBlock
                        Grid.Column="7"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="{x:Bind ViewModel.ChatStatisticsDto.BotsCount, Mode=OneWay}" />
                    <!--  List view with participants  -->
                    <ListView
                        x:Name="ListViewParticipantsStatistics"
                        Grid.Row="2"
                        Grid.ColumnSpan="7"
                        Margin="-15,-5,-15,0"
                        ItemTemplate="{StaticResource ParticipantsStatisticsViewTemplate}"
                        ItemsSource="{x:Bind ViewModel.ChatStatisticsDto.UserWithCountDtos, Mode=OneWay}">
                        <!--  The ItemsStackPanel must be edited to update the following two properties  -->
                        <!--  These properties allow the list to grow from the bottom  -->
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel VerticalAlignment="Top" ItemsUpdatingScrollMode="KeepLastItemInView" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <!--  This setter property is created so ListViewItems correctly align to the left or right.  -->
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </Grid>
            </Grid>
        </Grid>
    </ScrollView>
</common:TgPageBase>