<common:TgPageBase
    x:Class="OpenTgResearcherDesktop.Views.TgChatsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:OpenTgResearcherDesktop.Common"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:OpenTgResearcherDesktop.Helpers"
    xmlns:l="using:WinUI3Localizer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sources="using:TgStorage.Domain.Sources"
    xmlns:styles="using:OpenTgResearcherDesktop.Styles"
    xmlns:viewmodels="using:OpenTgResearcherDesktop.ViewModels"
    xmlns:views="using:OpenTgResearcherDesktop.Views"
    d:DataContext="{d:DesignInstance Type=viewmodels:TgChatsViewModel}"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <!--  Actions  -->
        <ContentControl HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
            <Expander
                Margin="{StaticResource ExpanderMargin}"
                Padding="{StaticResource ExpanderPadding}"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                l:Uids.Uid="ExpanderActions"
                IsExpanded="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  Lazy load  -->
                    <Button
                        Grid.Column="0"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{x:Bind ViewModel.LazyLoadCommand}"
                        IsEnabled="{x:Bind ViewModel.HasMoreItems, Mode=OneWay}">
                        <Button.CommandParameter>
                            <x:Boolean>False</x:Boolean>
                        </Button.CommandParameter>
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Margin="0,0,10,0" Glyph="&#xE712;" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="TextBlockLoadMore" />
                        </StackPanel>
                    </Button>
                    <!--  Start parse Telegram  -->
                    <Button
                        Grid.Column="1"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{x:Bind ViewModel.StartUpdateOnlineCommand}"
                        IsEnabled="{x:Bind ViewModel.IsOnlineReady, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsOnlineProcessing, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Margin="0,0,10,0" Glyph="&#xe777;" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="TextBlockStartParseTelegram" />
                        </StackPanel>
                    </Button>
                    <!--  Stop parse Telegram  -->
                    <Button
                        Grid.Column="1"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{x:Bind ViewModel.StopUpdateOnlineCommand}"
                        IsEnabled="{x:Bind ViewModel.IsOnlineReady, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsOnlineProcessing, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Margin="0,0,10,0" Glyph="&#xe777;" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="TextBlockStopParseTelegram" />
                        </StackPanel>
                    </Button>
                    <!--  Clear viewing  -->
                    <Button
                        Grid.Column="2"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{x:Bind ViewModel.ClearViewCommand}"
                        IsEnabled="{x:Bind ViewModel.IsStorageProcessing, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Margin="0,0,10,0" Glyph="&#xe894;" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="ActionClearView" />
                        </StackPanel>
                    </Button>
                    <!--  Loaded data statistics  -->
                    <TextBlock
                        Grid.Column="3"
                        Margin="5,5,15,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{x:Bind ViewModel.LoadedDataStatistics, Mode=OneWay}"
                        TextAlignment="Center" />
                </Grid>
            </Expander>
        </ContentControl>
        <!--  Data in storage  -->
        <ContentControl
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            Visibility="{x:Bind ViewModel.IsOnlineProcessing, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
            <Expander
                Margin="{StaticResource ExpanderMargin}"
                Padding="{StaticResource ExpanderPadding}"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                l:Uids.Uid="ExpanderDataInStorage"
                IsEnabled="{x:Bind ViewModel.IsStorageProcessing, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  Filter by subscribe  -->
                    <TextBlock
                        Margin="5,0,5,5"
                        l:Uids.Uid="FieldFilterBySubscribe"
                        TextAlignment="Left" />
                    <ToggleSwitch
                        Grid.Column="1"
                        Margin="5,-10,-65,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsOn="{x:Bind ViewModel.IsFilterBySubscribe, Mode=TwoWay}" />
                    <!--  Filter by Id  -->
                    <TextBlock
                        Grid.Column="2"
                        Margin="5,0,5,5"
                        l:Uids.Uid="FieldFilterById"
                        TextAlignment="Left" />
                    <ToggleSwitch
                        Grid.Column="3"
                        Margin="5,-10,-65,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsOn="{x:Bind ViewModel.IsFilterById, Mode=TwoWay}" />
                    <Grid />
                    <!--  Filter by Name  -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="5,0,5,5"
                        l:Uids.Uid="FieldFilterByName"
                        TextAlignment="Left" />
                    <ToggleSwitch
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="5,-10,-65,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsOn="{x:Bind ViewModel.IsFilterByName, Mode=TwoWay}" />
                    <!--  Filter by Title  -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="5,0,5,5"
                        l:Uids.Uid="FieldFilterByTitle"
                        TextAlignment="Left" />
                    <ToggleSwitch
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="5,-10,-65,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsOn="{x:Bind ViewModel.IsFilterByTitle, Mode=TwoWay}" />
                    <!--  Text for filter  -->
                    <TextBox
                        Grid.RowSpan="2"
                        Grid.Column="4"
                        Margin="5,0,5,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        l:Uids.Uid="FieldFilter"
                        KeyDown="FieldFilter_KeyDown"
                        Text="{x:Bind ViewModel.FilterText, Mode=TwoWay}" />
                    <!--  Search  -->
                    <Button
                        Grid.RowSpan="2"
                        Grid.Column="5"
                        Margin="5,0,5,5"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind Path=ViewModel.SearchCommand}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Glyph="&#xE721;" />
                            <TextBlock
                                Margin="10,0,10,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="ActionSearch" />
                        </StackPanel>
                    </Button>
                    <!--  Open or edit  -->
                    <Button
                        Grid.RowSpan="2"
                        Grid.Column="6"
                        Margin="5,0,5,5"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind Path=ViewModel.OpenOrEditChatCommand}"
                        CommandParameter="{x:Bind (sources:TgEfSourceLiteDto)DataGridChats.SelectedItem, Mode=OneWay}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Glyph="&#xEA5B;" />
                            <TextBlock
                                Margin="10,0,10,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="ActionOpenOrEdit" />
                        </StackPanel>
                    </Button>
                    <!--  Delete  -->
                    <Button
                        Grid.RowSpan="2"
                        Grid.Column="7"
                        Margin="5,0,5,5"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind Path=ViewModel.DeleteChatCommand}"
                        CommandParameter="{x:Bind (sources:TgEfSourceLiteDto)DataGridChats.SelectedItem, Mode=OneWay}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Glyph="&#xE894;" />
                            <TextBlock
                                Margin="10,0,10,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="ActionDelete" />
                        </StackPanel>
                    </Button>
                    <!--  Table  -->
                    <ScrollView
                        Grid.Row="2"
                        Grid.ColumnSpan="8"
                        Margin="0,0,5,0"
                        VerticalScrollMode="Auto">
                        <!--  Data  -->
                        <controls:DataGrid
                            x:Name="DataGridChats"
                            Margin="0,0,10,0"
                            VerticalAlignment="Top"
                            AutoGenerateColumns="False"
                            Background="Transparent"
                            CanUserSortColumns="False"
                            DoubleTapped="{x:Bind ViewModel.DataGrid_DoubleTapped, Mode=OneWay}"
                            HeadersVisibility="Column"
                            ItemsSource="{x:Bind ViewModel.Dtos, Mode=OneWay}">
                            <controls:DataGrid.Columns>
                                <!--  Id  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnIdTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnIdTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="Auto"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  Is subscribe  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnIsSubscribeTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnIsSubscribeTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="Auto"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  Is access  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnIsAccessTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnIsUserAccessTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="Auto"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  Is active  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnIsActiveTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnIsSourceActiveTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="Auto"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  User name  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnUserNameTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnUserNameTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="2*"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  Title  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnTitleTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnTitleTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="3*"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  Count  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnCountTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnCountTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="Auto"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  Progress  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnProgressTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnProgressTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="Auto"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  Participants  -->
                                <styles:TgBindableDataGridTemplateColumn
                                    l:Uids.Uid="ColumnParticipantsTemplate"
                                    ColumnSensitive="{StaticResource ColumnSensitiveTemplate}"
                                    ColumnValue="{StaticResource ColumnParticipantsTemplate}"
                                    ColumnVisible="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay}"
                                    ColumnWidth="Auto"
                                    OwnerGrid="{x:Bind DataGridChats}" />
                                <!--  End  -->
                            </controls:DataGrid.Columns>
                        </controls:DataGrid>
                    </ScrollView>
                </Grid>
            </Expander>
        </ContentControl>
        <!--  Online update  -->
        <ContentControl
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            Visibility="{x:Bind ViewModel.IsOnlineProcessing, Mode=OneWay}">
            <Expander
                Margin="{StaticResource ExpanderMargin}"
                Padding="{StaticResource ExpanderPadding}"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                l:Uids.Uid="ExpanderActions"
                IsExpanded="True">
                <Grid Margin="0,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  ChatsProgressMessage  -->
                    <TextBlock
                        Margin="10,0,10,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        l:Uids.Uid="FieldPercentOfChatParsing" />
                    <!--  Load data from Online  -->
                    <Slider
                        Grid.Column="1"
                        Margin="10,5,10,0"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        Maximum="{x:Bind ViewModel.ChatsProgressCountAll, Mode=OneWay}"
                        TickFrequency="1"
                        Value="{x:Bind ViewModel.ChatsProgressCounter, Mode=OneWay}" />
                    <!--  Progress string  -->
                    <TextBlock
                        Grid.Column="2"
                        Margin="10,0,10,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{x:Bind ViewModel.ChatsProgressString, Mode=OneWay}" />
                    <!--  Message  -->
                    <TextBlock
                        Grid.Column="3"
                        Margin="10,0,10,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{x:Bind ViewModel.ChatsProgressMessage, Mode=OneWay}" />
                </Grid>
            </Expander>
        </ContentControl>
    </Grid>
</common:TgPageBase>