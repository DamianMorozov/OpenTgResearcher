<common:TgPageBase
    x:Class="OpenTgResearcherDesktop.Views.TgUserDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:OpenTgResearcherDesktop.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:OpenTgResearcherDesktop.Helpers"
    xmlns:l="using:WinUI3Localizer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:messages="using:TgStorage.Domain.Messages"
    xmlns:sources="using:TgStorage.Domain.Sources"
    xmlns:styles="using:OpenTgResearcherDesktop.Styles"
    xmlns:users="using:TgStorage.Domain.Users"
    xmlns:viewmodels="using:OpenTgResearcherDesktop.ViewModels"
    xmlns:views="using:OpenTgResearcherDesktop.Views"
    d:DataContext="{d:DesignInstance Type=viewmodels:TgUserDetailsViewModel}"
    mc:Ignorable="d">

    <common:TgPageBase.Resources>
        <!--  Messages data template  -->
        <DataTemplate x:Key="MessagesViewTemplate" x:DataType="messages:TgEfMessageDto">
            <!--  General background and rounding  -->
            <Border
                Grid.Column="{x:Bind Direction, Converter={StaticResource EnumToColumnConverter}}"
                Grid.ColumnSpan="{x:Bind Direction, Converter={StaticResource EnumToColumnSpanConverter}}"
                Margin="0,0,0,5"
                Padding="5"
                Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                CornerRadius="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Grid.Resources>
                    <!--  Header: Changed, Id, Link, Sender  -->
                    <StackPanel
                        Grid.Row="0"
                        Orientation="Horizontal"
                        Spacing="5">
                        <!--  DtChangedString  -->
                        <TextBlock
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{Binding DtChangedString, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <TextBlock
                            Margin="5,5,5,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="·" />
                        <!--  Id  -->
                        <TextBlock
                            Margin="5,5,5,0"
                            l:Uids.Uid="TextBlockId"
                            Style="{ThemeResource BodyTextBlockStyle}" />
                        <TextBlock
                            Margin="5,5,5,0"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBlock
                            Margin="10,5,5,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{Binding Id, Mode=OneWay}"
                            Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <styles:TgAnimatedClipboardButton
                            Margin="0,-5,0,0"
                            Click="OnClipboardSilentWriteClick"
                            Style="{StaticResource ClipboardAnimatedButtonStyle}"
                            Tag="{Binding Id, Mode=OneWay}" />
                        <TextBlock
                            Margin="5,5,5,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="·" />
                        <!--  Link  -->
                        <TextBlock
                            Margin="0,5,0,0"
                            l:Uids.Uid="TextBlockLink"
                            Style="{ThemeResource BodyTextBlockStyle}" />
                        <TextBlock
                            Margin="0,5,0,0"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <HyperlinkButton
                            Margin="0,-2,0,0"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            Click="OnOpenHyperlink"
                            Content="{Binding Link, Mode=OneWay}"
                            Tag="{Binding Link, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <styles:TgAnimatedClipboardButton
                            Margin="-5,-5,0,0"
                            Click="OnClipboardSilentWriteClick"
                            Style="{StaticResource ClipboardAnimatedButtonStyle}"
                            Tag="{Binding Link, Mode=OneWay}" />
                        <TextBlock
                            Margin="5,5,5,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="·" />
                        <!--  Message deleted  -->
                        <TextBlock
                            Margin="0,5,0,0"
                            l:Uids.Uid="TextBlockMessageDeleted"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Visibility="{Binding IsDeleted, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </StackPanel>
                    <!--  Message content: image, text message  -->
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                            <TextBlock
                                Margin="0,5,0,0"
                                l:Uids.Uid="TextBlockMessage"
                                Style="{ThemeResource BodyTextBlockStyle}" />
                            <styles:TgAnimatedClipboardButton
                                Click="OnClipboardSilentWriteClick"
                                Style="{StaticResource ClipboardAnimatedButtonStyle}"
                                Tag="{Binding MessageText, Mode=OneWay}" />
                        </StackPanel>
                        <!--  Image preview  -->
                        <Border
                            Grid.Column="1"
                            MaxWidth="400"
                            MaxHeight="300"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            BorderBrush="{ThemeResource SystemAccentColor}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Image
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="{Binding ImageFullPath, Mode=OneWay, Converter={StaticResource SafeImagePathConverter}}"
                                Stretch="Uniform"
                                Tapped="OnImagePreviewClick"
                                Visibility="{Binding IsImageExists, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Border>
                        <!--  Thumb preview  -->
                        <Border
                            Grid.Column="1"
                            MaxWidth="400"
                            MaxHeight="300"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Left"
                            BorderBrush="{ThemeResource SystemAccentColor}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Image
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="{Binding ThumbFullPath, Mode=OneWay, Converter={StaticResource SafeImagePathConverter}}"
                                Stretch="Uniform"
                                Tapped="OnImagePreviewClick"
                                Visibility="{Binding IsThumbExists, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Border>
                        <!--  Message  -->
                        <TextBlock
                            Grid.Column="2"
                            Margin="5,5,0,0"
                            Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBlock
                            Grid.Column="2"
                            Margin="5,5,0,0"
                            VerticalAlignment="Center"
                            OpticalMarginAlignment="TrimSideBearings"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="{Binding MessageText, Mode=OneWay}"
                            TextAlignment="Left"
                            TextWrapping="WrapWholeWords"
                            Visibility="{Binding ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>
        <!--  Chat item template  -->
        <DataTemplate x:Key="UserChatsListTemplate" x:DataType="sources:TgEfChatWithCountDto">
            <StackPanel
                Height="Auto"
                Margin="4"
                Padding="10,0,0,10"
                HorizontalAlignment="Stretch"
                Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                CornerRadius="10"
                Opacity="1">
                <!--  Expander  -->
                <Expander
                    Margin="0,0,5,-10"
                    HorizontalAlignment="Stretch"
                    CornerRadius="10"
                    Header="{x:Bind ChatDto.DisplayName, Mode=OneWay}">
                    <Grid Margin="-10,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <!--  Empty data  -->
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <!--  Id  -->
                            <TextBlock
                                Margin="10,0,10,0"
                                l:Uids.Uid="TextBlockId"
                                Style="{ThemeResource BodyTextBlockStyle}" />
                            <TextBlock Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}" Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                            <TextBlock
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Text="{x:Bind ChatDto.Id, Mode=OneWay}"
                                Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <styles:TgAnimatedClipboardButton
                                Margin="0,-5,0,0"
                                Click="OnClipboardSilentWriteClick"
                                Style="{StaticResource ClipboardAnimatedButtonStyle}"
                                Tag="{x:Bind ChatDto.Id, Mode=OneWay}" />
                            <!--  UserName  -->
                            <TextBlock
                                Margin="10,0,10,0"
                                l:Uids.Uid="TextBlockUserName"
                                Style="{ThemeResource BodyTextBlockStyle}" />
                            <TextBlock Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}" Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                            <TextBlock
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Text="{x:Bind ChatDto.UserName, Mode=OneWay}"
                                Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <styles:TgAnimatedClipboardButton
                                Margin="0,-5,0,0"
                                Click="OnClipboardSilentWriteClick"
                                Style="{StaticResource ClipboardAnimatedButtonStyle}"
                                Tag="{x:Bind ChatDto.UserName, Mode=OneWay}" />
                            <!--  Title  -->
                            <TextBlock
                                Margin="10,0,10,0"
                                l:Uids.Uid="FieldTitle"
                                Style="{ThemeResource BodyTextBlockStyle}" />
                            <TextBlock Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}" Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                            <TextBlock
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Text="{x:Bind ChatDto.Title, Mode=OneWay}"
                                Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <styles:TgAnimatedClipboardButton
                                Margin="0,-5,0,0"
                                Click="OnClipboardSilentWriteClick"
                                Style="{StaticResource ClipboardAnimatedButtonStyle}"
                                Tag="{x:Bind ChatDto.Title, Mode=OneWay}" />
                            <!--  MessagesCount  -->
                            <TextBlock
                                Margin="10,0,10,0"
                                l:Uids.Uid="FieldCountMessages"
                                Style="{ThemeResource BodyTextBlockStyle}" />
                            <TextBlock Text="{Binding LoadStateService.SensitiveData, Mode=OneWay}" Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                            <TextBlock
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Text="{x:Bind MessagesCount, Mode=OneWay}"
                                Visibility="{Binding LoadStateService.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <styles:TgAnimatedClipboardButton
                                Margin="0,-5,0,0"
                                Click="OnClipboardSilentWriteClick"
                                Style="{StaticResource ClipboardAnimatedButtonStyle}"
                                Tag="{x:Bind MessagesCount, Mode=OneWay}" />
                            <!--  Load user messages in chat  -->
                            <Button
                                Margin="10,-10,0,0"
                                l:Uids.Uid="ActionLoadMessages"
                                Click="Button_LoadMessagesClick"
                                Tag="{x:Bind ChatDto}" />
                            <!--  Update Preview  -->
                            <Button
                                Margin="10,-10,0,0"
                                l:Uids.Uid="ActionLoadMessages"
                                Command="{Binding Path=ViewModel.LoadUserMessagesCommand}"
                                CommandParameter="{x:Bind ChatDto, Mode=OneWay}" />
                        </StackPanel>
                        <!--  Messages  -->
                        <ListView
                            Grid.Row="1"
                            ItemTemplate="{StaticResource MessagesViewTemplate}"
                            ItemsSource="{x:Bind Messages, Mode=OneWay}">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsStackPanel VerticalAlignment="Top" ItemsUpdatingScrollMode="KeepLastItemInView" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </Expander>
            </StackPanel>
        </DataTemplate>
    </common:TgPageBase.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <!--  Actions  -->
        <ContentControl
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            Visibility="{x:Bind ViewModel.IsStorageProcessing, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
            <Expander
                Grid.Row="2"
                Margin="{StaticResource ExpanderMargin}"
                Padding="{StaticResource ExpanderPadding}"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                l:Uids.Uid="ExpanderActions"
                IsExpanded="True">
                <Grid Margin="0,-10,0,-10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <!--  Online update  -->
                    <Button
                        Grid.Column="0"
                        Margin="0,0,5,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{x:Bind ViewModel.StartUpdateOnlineCommand}"
                        IsEnabled="{x:Bind ViewModel.IsOnlineReady, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsOnlineProcessing, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Margin="0,0,10,0" Glyph="&#xe777;" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="TextBlockUpdateOnline" />
                        </StackPanel>
                    </Button>
                    <!--  Clear viewing  -->
                    <Button
                        Grid.Column="1"
                        Margin="0,0,5,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{x:Bind ViewModel.ClearViewCommand}">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <FontIcon Margin="0,0,10,0" Glyph="&#xe894;" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                l:Uids.Uid="ActionClearView" />
                        </StackPanel>
                    </Button>
                </Grid>
            </Expander>
        </ContentControl>
        <!--  Dto  -->
        <ContentControl
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            Visibility="{x:Bind ViewModel.IsStorageProcessing, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
            <Expander
                Margin="{StaticResource ExpanderMargin}"
                Padding="{StaticResource ExpanderPadding}"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                l:Uids.Uid="ExpanderDataInStorage"
                IsExpanded="True">
                <Grid Margin="0,0,10,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--  Uid  -->
                    <TextBlock
                        Grid.Row="0"
                        Margin="10,7,7,2"
                        l:Uids.Uid="FieldUid"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        Text="{x:Bind ViewModel.Dto.Uid, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <!--  DtChanged  -->
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="2"
                        Margin="15,7,7,2"
                        l:Uids.Uid="FieldDtChanged"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="0"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        IsReadOnly="True"
                        Text="{x:Bind ViewModel.Dto.DtChangedString, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <!--  Id  -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="10,7,7,2"
                        l:Uids.Uid="FieldId"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <TextBlock
                            Margin="5,0,0,5"
                            Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                        <TextBox
                            Margin="5,0,0,5"
                            HorizontalAlignment="Stretch"
                            IsEnabled="False"
                            IsReadOnly="True"
                            Text="{x:Bind ViewModel.Dto.Id, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='N0'}"
                            Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <styles:TgAnimatedClipboardButton
                            Margin="0,-5,0,0"
                            Click="OnClipboardSilentWriteClick"
                            Style="{StaticResource ClipboardAnimatedButtonStyle}"
                            Tag="{x:Bind ViewModel.Dto.Id, Mode=OneWay}" />
                    </StackPanel>
                    <!--  AccessHash  -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="15,7,7,2"
                        l:Uids.Uid="FieldAccessHash"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        IsReadOnly="True"
                        Text="{x:Bind ViewModel.Dto.AccessHash, Mode=TwoWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <Grid Grid.Row="2" Grid.ColumnSpan="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <!--  IsContact  -->
                        <TextBlock
                            Grid.Column="0"
                            Margin="10,7,7,2"
                            l:Uids.Uid="FieldIsContact"
                            FontWeight="Bold"
                            TextAlignment="Left" />
                        <ToggleSwitch
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="5,0,0,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            IsEnabled="False"
                            IsOn="{x:Bind ViewModel.Dto.IsContact, Mode=OneWay}" />
                        <!--  IsUserActive  -->
                        <TextBlock
                            Grid.Column="2"
                            Margin="10,7,7,2"
                            l:Uids.Uid="FieldIsActive"
                            FontWeight="Bold"
                            TextAlignment="Left" />
                        <ToggleSwitch
                            Grid.Row="2"
                            Grid.Column="3"
                            Margin="5,0,0,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            IsEnabled="False"
                            IsOn="{x:Bind ViewModel.Dto.IsUserActive, Mode=OneWay}" />
                        <!--  IsBot  -->
                        <TextBlock
                            Grid.Row="2"
                            Grid.Column="4"
                            Margin="15,7,7,2"
                            l:Uids.Uid="FieldIsBot"
                            FontWeight="Bold"
                            TextAlignment="Left" />
                        <ToggleSwitch
                            Grid.Row="2"
                            Grid.Column="5"
                            Margin="5,0,0,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            IsEnabled="False"
                            IsOn="{x:Bind ViewModel.Dto.IsBot, Mode=OneWay}" />
                    </Grid>
                    <!--  DisplayName  -->
                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="0"
                        Margin="10,7,7,2"
                        l:Uids.Uid="FieldDisplayName"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        IsReadOnly="True"
                        Text="{x:Bind ViewModel.Dto.DisplayName, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <!--  UserName  -->
                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="2"
                        Margin="10,7,7,2"
                        l:Uids.Uid="FieldUserName"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="3"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        IsReadOnly="True"
                        Text="{x:Bind ViewModel.Dto.UserName, Mode=TwoWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <!--  FirstName  -->
                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="0"
                        Margin="10,7,7,2"
                        l:Uids.Uid="FieldFirstName"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="4"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        Text="{x:Bind ViewModel.Dto.FirstName, Mode=TwoWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <!--  LastName  -->
                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="2"
                        Margin="15,7,7,2"
                        l:Uids.Uid="FieldLastName"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="4"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        Text="{x:Bind ViewModel.Dto.LastName, Mode=TwoWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <!--  StoriesMaxId  -->
                    <TextBlock
                        Grid.Row="5"
                        Grid.Column="2"
                        Margin="15,7,7,2"
                        l:Uids.Uid="FieldStoriesMaxId"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <TextBox
                        Grid.Row="5"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        IsReadOnly="True"
                        Text="{x:Bind ViewModel.Dto.StoriesMaxId, Mode=TwoWay}" />
                    <!--  PhoneNumber  -->
                    <TextBlock
                        Grid.Row="6"
                        Grid.Column="0"
                        Margin="10,7,7,2"
                        l:Uids.Uid="FieldPhoneNumber"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <!--  Sensitive data  -->
                    <TextBlock
                        Grid.Row="6"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        Text="{x:Bind ViewModel.SensitiveData, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
                    <TextBox
                        Grid.Row="6"
                        Grid.Column="1"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        Text="{x:Bind ViewModel.Dto.PhoneNumber, Mode=TwoWay}"
                        Visibility="{x:Bind ViewModel.IsDisplaySensitiveData, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <!--  Status  -->
                    <TextBlock
                        Grid.Row="6"
                        Grid.Column="2"
                        Margin="15,7,7,2"
                        l:Uids.Uid="FieldStatus"
                        FontWeight="Bold"
                        TextAlignment="Left" />
                    <TextBox
                        Grid.Row="6"
                        Grid.Column="3"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Stretch"
                        IsEnabled="False"
                        IsReadOnly="True"
                        Text="{x:Bind ViewModel.Dto.Status, Mode=TwoWay}" />
                </Grid>
            </Expander>
        </ContentControl>
        <!--  Chats  -->
        <ContentControl
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            Visibility="{x:Bind ViewModel.IsStorageProcessing, Mode=OneWay, Converter={StaticResource InverseBoolToVisibilityConverter}}">
            <Expander
                Margin="{StaticResource ExpanderMargin}"
                Padding="{StaticResource ExpanderPadding}"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                l:Uids.Uid="ExpanderChats"
                IsExpanded="True">
                <!--  User with chats  -->
                <ListView
                    x:Name="ListViewUserWithChats"
                    ItemTemplate="{StaticResource UserChatsListTemplate}"
                    ItemsSource="{x:Bind ViewModel.ChatsDtos, Mode=OneWay}">
                    <!--
                        The ItemsStackPanel must be edited to update the following two properties
                        These properties allow the list to grow from the bottom
                    -->
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel VerticalAlignment="Top" ItemsUpdatingScrollMode="KeepLastItemInView" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <!--  This setter property is created so ListViewItems correctly align to the left or right.  -->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Expander>
        </ContentControl>
    </Grid>
</common:TgPageBase>