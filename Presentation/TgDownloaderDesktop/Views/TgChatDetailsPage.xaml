<common:TgPageBase
	x:Class="TgDownloaderDesktop.Views.TgChatDetailsPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:common="using:TgDownloaderDesktop.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:TgDownloaderDesktop.Helpers"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:messages="using:TgStorage.Domain.Messages"
	xmlns:viewmodels="using:TgDownloaderDesktop.ViewModels"
	xmlns:views="using:TgDownloaderDesktop.Views"
	d:DataContext="{d:DesignInstance Type=viewmodels:TgChatDetailsViewModel}"
	mc:Ignorable="d">

	<common:TgPageBase.Resources>
		<helpers:TgInverseBooleanConverter x:Key="InverseBooleanConverter" />
		<helpers:TgInverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
		<helpers:TgBooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<helpers:TgEnumToColumnConverter x:Key="EnumToColumnConverter" />
		<helpers:TgEnumToColumnSpanConverter x:Key="EnumToColumnSpanConverter" />
		<!--  Data template  -->
		<DataTemplate x:Key="MessageViewTemplate" x:DataType="messages:TgEfMessageDto">
			<Grid Height="Auto" Margin="4">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*" />
					<ColumnDefinition Width="1*" />
					<ColumnDefinition Width="1*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<StackPanel
					Grid.Column="{x:Bind Direction, Converter={StaticResource EnumToColumnConverter}}"
					Grid.ColumnSpan="{x:Bind Direction, Converter={StaticResource EnumToColumnSpanConverter}}"
					Padding="10,0,0,10"
					HorizontalAlignment="Stretch"
					Background="{ThemeResource SystemColorHighlightColor}"
					CornerRadius="10">
					<TextBlock
						Padding="0,10,0,0"
						HorizontalAlignment="Left"
						Foreground="{ThemeResource SystemColorHighlightTextColor}"
						Style="{ThemeResource CaptionTextBlockStyle}"
						Text="{x:Bind DtChangedString}" />
					<TextBlock
						Padding="0,0,0,10"
						Foreground="{ThemeResource SystemColorHighlightTextColor}"
						Style="{ThemeResource BodyTextBlockStyle}"
						Text="{x:Bind Message}" />
				</StackPanel>
			</Grid>
		</DataTemplate>
	</common:TgPageBase.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="1*" />
		</Grid.RowDefinitions>
		<!--  Load data  -->
		<views:TgLoadDataPage
			Grid.Row="0"
			Margin="0,0,0,10"
			Visibility="{x:Bind ViewModel.IsPageLoad, Mode=OneWay}" />
		<!--  Actions  -->
		<ContentControl
			Grid.Row="1"
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch">
			<Expander
				x:Uid="SettingAppActions"
				Margin="{StaticResource ExpanderMargin}"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				IsExpanded="True">
				<Grid Margin="0,-10,0,-10">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*" />
						<ColumnDefinition Width="1*" />
						<ColumnDefinition Width="1*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<!--  Load from storage  -->
					<Button
						Grid.Column="0"
						Margin="0,0,5,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{x:Bind ViewModel.LoadDataStorageCommand, Mode=OneWay}"
						IsEnabled="{x:Bind ViewModel.IsDownloading, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}">
						<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
							<FontIcon Margin="0,0,10,0" Glyph="&#xe777;" />
							<TextBlock
								x:Uid="ActionLoadFromStorage"
								HorizontalAlignment="Center"
								VerticalAlignment="Center" />
						</StackPanel>
					</Button>
					<!--  Update from Telegram  -->
					<Button
						Grid.Column="1"
						Margin="0,0,5,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{x:Bind ViewModel.UpdateOnlineCommand, Mode=OneWay}"
						IsEnabled="{x:Bind ViewModel.IsOnlineReady, Mode=OneWay}"
						Visibility="{x:Bind ViewModel.IsDownloading, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
						<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
							<FontIcon Margin="0,0,10,0" Glyph="&#xe777;" />
							<TextBlock
								x:Uid="TextBlockUpdateOnline"
								HorizontalAlignment="Center"
								VerticalAlignment="Center" />
						</StackPanel>
					</Button>
					<!--  Stop downloading  -->
					<Button
						Grid.Column="1"
						Margin="0,0,5,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{x:Bind ViewModel.StopDownloadingCommand, Mode=OneWay}"
						IsEnabled="{x:Bind ViewModel.IsOnlineReady, Mode=OneWay}"
						Visibility="{x:Bind ViewModel.IsDownloading, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
						<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
							<FontIcon Margin="0,0,10,0" Glyph="&#xE71A;" />
							<TextBlock
								x:Uid="TextBlockStopDownloading"
								HorizontalAlignment="Center"
								VerticalAlignment="Center" />
						</StackPanel>
					</Button>
					<!--  Clear viewing  -->
					<Button
						Grid.Column="2"
						Margin="0,0,5,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{x:Bind ViewModel.ClearDataStorageCommand, Mode=OneWay}"
						IsEnabled="{x:Bind ViewModel.IsDownloading, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}">
						<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
							<FontIcon Margin="0,0,10,0" Glyph="&#xe894;" />
							<TextBlock
								x:Uid="ActionClearView"
								HorizontalAlignment="Center"
								VerticalAlignment="Center" />
						</StackPanel>
					</Button>
					<!--  Count  -->
					<TextBlock
						x:Uid="TextBlockCount"
						Grid.Column="3"
						Margin="0,0,5,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Center"
						TextAlignment="Right" />
					<TextBlock
						Grid.Column="4"
						Margin="0,0,5,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Center"
						Text="{x:Bind ViewModel.Messages.Count, Mode=OneWay}"
						TextAlignment="Center" />
				</Grid>
			</Expander>
		</ContentControl>
		<!--  Data in storage  -->
		<ContentControl
			Grid.Row="2"
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			IsEnabled="{x:Bind ViewModel.IsDownloading, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}">
			<Expander
				x:Uid="ExpanderDataInStorage"
				Margin="{StaticResource ExpanderMargin}"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				IsExpanded="True">
				<ScrollView HorizontalScrollMode="Disabled" VerticalScrollMode="Auto">
					<Grid Margin="0,0,10,0">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<!--  Uid  -->
						<TextBlock
							x:Uid="FieldUid"
							Grid.Row="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<TextBox
							Grid.Row="0"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="False"
							Text="{x:Bind ViewModel.Dto.Uid, Mode=OneWay}" />
						<!--  DtChanged  -->
						<TextBlock
							x:Uid="FieldDtChanged"
							Grid.Row="0"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<TextBox
							Grid.Row="0"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="False"
							IsReadOnly="True"
							Text="{x:Bind ViewModel.Dto.DtChangedString, Mode=OneWay}" />
						<!--  Id  -->
						<TextBlock
							x:Uid="FieldId"
							Grid.Row="1"
							Grid.Column="0"
							Margin="2,0,7,2"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Style="{ThemeResource BodyTextBlockStyle}" />
						<Grid
							Grid.Row="1"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Left"
								IsEnabled="False"
								IsReadOnly="True"
								Text="{x:Bind ViewModel.Dto.Id, Mode=OneWay}" />
							<Button
								Grid.Column="1"
								Margin="10,0,0,0"
								HorizontalContentAlignment="Left"
								Click="{x:Bind ViewModel.OnClipboardWriteClick, Mode=OneWay}"
								CornerRadius="10"
								Tag="{x:Bind ViewModel.Dto.Id, Mode=OneWay}">
								<SymbolIcon Symbol="Copy" />
							</Button>
						</Grid>
						<!--  IsActive  -->
						<TextBlock
							x:Uid="FieldIsActive"
							Grid.Row="2"
							Grid.Column="0"
							Margin="2,10,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="2"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							IsEnabled="False"
							IsOn="{x:Bind ViewModel.Dto.IsActive, Mode=OneWay}" />
						<!--  IsAutoUpdate  -->
						<TextBlock
							x:Uid="FieldIsAutoUpdate"
							Grid.Row="2"
							Grid.Column="2"
							Margin="12,10,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="2"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							IsEnabled="False"
							IsOn="{x:Bind ViewModel.Dto.IsAutoUpdate, Mode=OneWay}" />
						<!--  UserName  -->
						<TextBlock
							x:Uid="FieldUserName"
							Grid.Row="3"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<Grid
							Grid.Row="3"
							Grid.Column="1"
							Grid.ColumnSpan="3"
							Margin="2"
							HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Left"
								IsEnabled="False"
								IsReadOnly="True"
								Text="{x:Bind ViewModel.Dto.UserName, Mode=OneWay}" />
							<Button
								Grid.Column="1"
								Margin="10,0,0,0"
								HorizontalContentAlignment="Left"
								Click="{x:Bind ViewModel.OnClipboardWriteClick, Mode=OneWay}"
								CornerRadius="10"
								Tag="{x:Bind ViewModel.Dto.UserName, Mode=OneWay}">
								<SymbolIcon Symbol="Copy" />
							</Button>
						</Grid>
						<!--  Title  -->
						<TextBlock
							x:Uid="FieldTitle"
							Grid.Row="4"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<Grid
							Grid.Row="4"
							Grid.Column="1"
							Grid.ColumnSpan="3"
							Margin="2"
							HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Left"
								IsEnabled="False"
								IsReadOnly="True"
								Text="{x:Bind ViewModel.Dto.Title, Mode=OneWay}" />
							<Button
								Grid.Column="1"
								Margin="10,0,0,0"
								HorizontalContentAlignment="Left"
								Click="{x:Bind ViewModel.OnClipboardWriteClick, Mode=OneWay}"
								CornerRadius="10"
								Tag="{x:Bind ViewModel.Dto.Title, Mode=OneWay}">
								<SymbolIcon Symbol="Copy" />
							</Button>
						</Grid>
						<!--  About  -->
						<TextBlock
							x:Uid="FieldAbout"
							Grid.Row="5"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<Grid
							Grid.Row="5"
							Grid.Column="1"
							Grid.ColumnSpan="3"
							Margin="2"
							HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Left"
								IsEnabled="False"
								IsReadOnly="True"
								Text="{x:Bind ViewModel.Dto.About, Mode=OneWay}" />
							<Button
								Grid.Column="1"
								Margin="10,0,0,0"
								HorizontalContentAlignment="Left"
								Click="{x:Bind ViewModel.OnClipboardWriteClick, Mode=OneWay}"
								CornerRadius="10"
								Tag="{x:Bind ViewModel.Dto.About, Mode=OneWay}">
								<SymbolIcon Symbol="Copy" />
							</Button>
						</Grid>
						<!--  Directory  -->
						<TextBlock
							x:Uid="FieldDirectory"
							Grid.Row="6"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<Grid
							Grid.Row="6"
							Grid.Column="1"
							Grid.ColumnSpan="3"
							Margin="2"
							HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Left"
								Text="{x:Bind ViewModel.Dto.Directory, Mode=TwoWay}" />
							<Button
								Grid.Column="1"
								Margin="10,0,0,0"
								HorizontalContentAlignment="Left"
								Click="{x:Bind ViewModel.OnClipboardWriteClick, Mode=OneWay}"
								CornerRadius="10"
								Tag="{x:Bind ViewModel.Dto.Directory, Mode=TwoWay}">
								<SymbolIcon Symbol="Copy" />
							</Button>
						</Grid>
						<!--  FirstId  -->
						<TextBlock
							x:Uid="FieldFirstId"
							Grid.Row="7"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<Grid
							Grid.Row="7"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Left"
								Text="{x:Bind ViewModel.Dto.FirstId, Mode=TwoWay}" />
							<Button
								Grid.Column="1"
								Margin="10,0,0,0"
								HorizontalContentAlignment="Left"
								Click="{x:Bind ViewModel.OnClipboardWriteClick, Mode=OneWay}"
								CornerRadius="10"
								Tag="{x:Bind ViewModel.Dto.FirstId, Mode=OneWay}">
								<SymbolIcon Symbol="Copy" />
							</Button>
						</Grid>
						<!--  Count  -->
						<TextBlock
							x:Uid="FieldCount"
							Grid.Row="7"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<Grid
							Grid.Row="7"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Left"
								Text="{x:Bind ViewModel.Dto.Count, Mode=OneWay}" />
							<Button
								Grid.Column="1"
								Margin="10,0,0,0"
								HorizontalContentAlignment="Left"
								Click="{x:Bind ViewModel.OnClipboardWriteClick, Mode=OneWay}"
								CornerRadius="10"
								Tag="{x:Bind ViewModel.Dto.Count, Mode=TwoWay}">
								<SymbolIcon Symbol="Copy" />
							</Button>
						</Grid>
					</Grid>
				</ScrollView>
			</Expander>
		</ContentControl>
		<!--  Downloading  -->
		<ContentControl
			Grid.Row="3"
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch">
			<Expander
				x:Uid="ExpanderDownloading"
				Margin="{StaticResource ExpanderMargin}"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				IsEnabled="{x:Bind ViewModel.IsDownloading, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
				IsExpanded="True">
				<ScrollView HorizontalScrollMode="Disabled" VerticalScrollMode="Auto">
					<Grid Margin="0,0,10,0">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<!--  Threads count  -->
						<TextBlock
							x:Uid="FieldCountThreads"
							Grid.Row="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<NumberBox
							x:Name="NumberBoxSpinButtonPlacementExample"
							Grid.Row="0"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							LargeChange="10"
							Maximum="{x:Bind ViewModel.DownloadSettings.LimitThreads, Mode=TwoWay}"
							Minimum="1"
							SmallChange="1"
							SpinButtonPlacementMode="Compact"
							Value="{x:Bind ViewModel.DownloadSettings.CountThreads, Mode=TwoWay}" />
						<!--  IsActive  -->
						<TextBlock
							x:Uid="FieldIsActive"
							Grid.Row="0"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="0"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="False"
							IsOn="{x:Bind ViewModel.DownloadSettings.IsActive, Mode=OneWay}" />
						<!--  Overwriting files  -->
						<TextBlock
							x:Uid="FieldIsRewriteFiles"
							Grid.Row="1"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="1"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="True"
							IsOn="{x:Bind ViewModel.DownloadSettings.IsRewriteFiles, Mode=TwoWay}" />
						<!--  Overwriting messages  -->
						<TextBlock
							x:Uid="FieldIsRewriteMessages"
							Grid.Row="1"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="1"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsOn="{x:Bind ViewModel.DownloadSettings.IsRewriteMessages, Mode=TwoWay}" />
						<!--  Joining message ID with file  -->
						<TextBlock
							x:Uid="FieldIsJoinFileNameWithMessageId"
							Grid.Row="2"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="2"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="True"
							IsOn="{x:Bind ViewModel.DownloadSettings.IsJoinFileNameWithMessageId, Mode=TwoWay}" />
						<!--  Creating subdirectories  -->
						<TextBlock
							x:Uid="FieldIsCreatingSubdirectories"
							Grid.Row="2"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="2"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsOn="{x:Bind ViewModel.Dto.IsCreatingSubdirectories, Mode=TwoWay}" />
						<!--  File naming by message subdirectories  -->
						<TextBlock
							x:Uid="FieldIsFileNamingByMessage"
							Grid.Row="3"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<ToggleSwitch
							Grid.Row="3"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsOn="{x:Bind ViewModel.Dto.IsFileNamingByMessage, Mode=TwoWay}" />
						<!--  StateSourceDt  -->
						<TextBlock
							x:Uid="FieldDtChanged"
							Grid.Row="4"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<TextBox
							Grid.Row="4"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="False"
							Text="{x:Bind ViewModel.StateSourceDt, Mode=OneWay}" />
						<!--  StateSourceMsg  -->
						<TextBlock
							x:Uid="FieldMessage"
							Grid.Row="4"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<TextBox
							Grid.Row="4"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="False"
							IsReadOnly="True"
							Text="{x:Bind ViewModel.StateSourceMsg, Mode=OneWay}" />
						<!--  StateSourceProgressString  -->
						<TextBlock
							x:Uid="FieldPercent"
							Grid.Row="5"
							Grid.Column="0"
							Margin="2,7,7,2"
							TextAlignment="Left" />
						<TextBox
							Grid.Row="5"
							Grid.Column="1"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="False"
							Text="{x:Bind ViewModel.StateSourceProgressString, Mode=OneWay}" />
						<!--  StateSourceProgress  -->
						<TextBlock
							x:Uid="FieldDirectory"
							Grid.Row="5"
							Grid.Column="2"
							Margin="12,7,7,2"
							TextAlignment="Left" />
						<TextBox
							Grid.Row="5"
							Grid.Column="3"
							Margin="2"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Left"
							IsEnabled="False"
							IsReadOnly="True"
							Text="{x:Bind ViewModel.StateSourceDirectory, Mode=OneWay}" />
					</Grid>
				</ScrollView>
			</Expander>
		</ContentControl>
		<!--  Content  -->
		<ContentControl
			Grid.Row="4"
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Visibility="{x:Bind ViewModel.IsEnabledContent, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
			<Expander
				x:Uid="ExpanderContent"
				Margin="{StaticResource ExpanderMargin}"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				IsExpanded="True">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="1*" />
					</Grid.RowDefinitions>
					<!--  Empty data  -->
					<TextBlock
						x:Uid="FieldEmptyData"
						Grid.Row="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Visibility="{x:Bind ViewModel.EmptyData, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
					<!--  Data  -->
					<ScrollView
						Grid.Row="1"
						Margin="0,0,10,0"
						HorizontalScrollMode="Disabled"
						VerticalScrollMode="Auto"
						Visibility="{x:Bind ViewModel.EmptyData, Converter={StaticResource BooleanToVisibilityConverter}}">
						<ListView
							x:Name="ListViewData"
							ItemTemplate="{StaticResource MessageViewTemplate}"
							ItemsSource="{x:Bind ViewModel.Messages, Mode=OneWay}">
							<!--  The ItemsStackPanel must be edited to update the following two properties  -->
							<!--  These properties allow the list to grow from the bottom  -->
							<ListView.ItemsPanel>
								<ItemsPanelTemplate>
									<ItemsStackPanel VerticalAlignment="Top" ItemsUpdatingScrollMode="KeepLastItemInView" />
								</ItemsPanelTemplate>
							</ListView.ItemsPanel>
							<!--  This setter property is created so ListViewItems correctly align to the left or right.  -->
							<ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem">
									<Setter Property="HorizontalContentAlignment" Value="Stretch" />
								</Style>
							</ListView.ItemContainerStyle>
						</ListView>
					</ScrollView>
				</Grid>
			</Expander>
		</ContentControl>
	</Grid>
</common:TgPageBase>